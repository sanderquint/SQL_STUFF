/*SELECTING QUOTATIONS QUERY - Stage 1 - Creating Table for Eligible quotations 
Table Name:COM_C360_WL_QUOTE_STAGE */

IF OBJECT_ID (N'[MOSAIC_DATAMART].[COM_C360_WL_QUOTE_STAGE]') IS NOT NULL
		DROP TABLE [MOSAIC_DATAMART].[COM_C360_WL_QUOTE_STAGE]

SELECT a.QUOTE, a.LINE, a.QUOTE_REVISION,
       a.ACCOUNT, a.ACCOUNT_ROW_ID,cust.[ACCOUNT_NAME],
       cust.[PARENT_ID], cust.[PARENT_NAME],
       cust.[CS_PARENT],cust.[CS_CHANNEL],
       coalesce(EATON_PART, WRITE_IN_PRODUCT) as QUOTE_PART_NUM, WRITE_IN_PRODUCT,
       CUSTOMER_PART, EAU, ERP_ACCOUNT_ID, DUNS_ID,ERP_SYSTEM_NAME, 
       EXTENDED_EAU_NET_PRICE, EXTENDED_QTY, 
       NET_PRICE, QUANTITY,  QUOTE_ITEM_QTY_REVENUE, 
       QUOTE_SENT_TO_CUST_DATE,SELLING_PLANT, 
       SOLD_TO_ACCOUNT, TARGET_PRICE, UOM, WRITE_IN_PRODUCT_DESC
INTO [MOSAIC_DATAMART].[COM_C360_WL_QUOTE_STAGE]
FROM [MOSAIC_ODS].[C360_QUOTES] a
INNER JOIN (SELECT QUOTE, /*LINE,*/ max(QUOTE_REVISION) AS REVISION FROM [MOSAIC_ODS].[C360_QUOTES] GROUP BY QUOTE/*, LINE*/) b
	   on a.QUOTE = b.QUOTE and /*a.LINE = b.LINE and*/ a.QUOTE_REVISION = b.REVISION
LEFT JOIN MOSAIC_DATAMART.C360_CUSTOMERS_NO_ERP cust ON a.ACCOUNT_ROW_ID = cust.ACCOUNT_ID
WHERE a.ACCOUNT NOT LIKE '%Test%'
AND QUOTE_STATUS in ('Doc Sent to Customer', 'Expired', 'Approved', 'Won')
AND QUOTE_TYPE = 'Standard'
AND NO_QUOTE = 'N'
AND ((EATON_PART NOT LIKE '%@%' OR WRITE_IN_PRODUCT NOT LIKE '%@%')
AND (upper(EATON_PART) NOT LIKE '%WRITE_IN%' OR upper(WRITE_IN_PRODUCT) NOT LIKE '%WRITE_IN%'))

/*----RANKING QUOTE START DATES-----*/
IF OBJECT_ID (N'[MOSAIC_DATAMART].COM_C360_QUOTE_END_DATE_STAGE') IS NOT NULL
	DROP TABLE [MOSAIC_DATAMART].COM_C360_QUOTE_END_DATE_STAGE  

SELECT CS_PARENT,ERP_ACCOUNT_ID, [QUOTE_PART_NUM], 
[QUOTE_SENT_TO_CUST_DATE],
rank() OVER (PARTITION BY  CS_PARENT, [QUOTE_PART_NUM]
ORDER BY [QUOTE_SENT_TO_CUST_DATE] asc) as RankOrd,
datediff(d,QUOTE_SENT_TO_CUST_DATE,lead(QUOTE_SENT_TO_CUST_DATE) OVER (PARTITION BY  CS_PARENT, [QUOTE_PART_NUM] 
ORDER BY ([QUOTE_SENT_TO_CUST_DATE]))) as QuotationValidityDays,
QUOTE, LINE, QUOTE_REVISION
INTO [MOSAIC_DATAMART].COM_C360_QUOTE_END_DATE_STAGE
FROM [MOSAIC_DATAMART].[COM_C360_WL_QUOTE_STAGE]
GROUP BY CS_PARENT,[QUOTE_PART_NUM],[QUOTE_SENT_TO_CUST_DATE],ERP_ACCOUNT_ID,QUOTE, LINE, QUOTE_REVISION
ORDER BY CS_PARENT, QUOTE_PART_NUM, QUOTE_SENT_TO_CUST_DATE


/*Finding the Start and the End Dates for Each Quotation Line*/
IF OBJECT_ID (N'[MOSAIC_DATAMART].COM_C360_QUOTE_END_DATES') IS NOT NULL
	DROP TABLE [MOSAIC_DATAMART].COM_C360_QUOTE_END_DATES

SELECT a.[CS_PARENT]
      ,a.[ERP_ACCOUNT_ID]
      ,a.[QUOTE_PART_NUM]
      ,a.[QUOTE_SENT_TO_CUST_DATE] as Quote_Start_Date
      ,b.[QUOTE_SENT_TO_CUST_DATE] as Quote_End_Date
      ,a.[RankOrd]
      ,b.RankOrd as NextRank
      ,a.QuotationValidityDays
      ,a.[QUOTE]
      ,a.[LINE]
      ,a.[QUOTE_REVISION]
INTO MOSAIC_DATAMART.COM_C360_QUOTE_END_DATES
FROM [MOSAIC_DATAMART].[COM_C360_QUOTE_END_DATE_STAGE] a
LEFT JOIN [MOSAIC_DATAMART].[COM_C360_QUOTE_END_DATE_STAGE] b ON a.CS_PARENT = b.CS_PARENT 
and a.QUOTE_PART_NUM = b.QUOTE_PART_NUM 
and a.RankOrd+1 = b.RankOrd
ORDER BY a.CS_PARENT, a.QUOTE_PART_NUM, a.QUOTE_SENT_TO_CUST_DATE,a.RankOrd

/*Invoice Tagging Query - Adding Invocies onto Quotations - Stage 3*/

IF OBJECT_ID (N'MOSAIC_DATAMART.COM_C360_WL_QUOTE_TAG_STAGE') IS NOT NULL
	DROP TABLE MOSAIC_DATAMART.COM_C360_WL_QUOTE_TAG_STAGE

SELECT q.QUOTE,q.LINE,q.QUOTE_REVISION,
ACCOUNT,q.CS_PARENT,q.CS_CHANNEL,
q.QUOTE_PART_NUM,WRITE_IN_PRODUCT,CUSTOMER_PART,
EAU,q.ERP_ACCOUNT_ID,ERP_SYSTEM_NAME,
EXTENDED_EAU_NET_PRICE,EXTENDED_QTY,
NET_PRICE,QUANTITY,QUOTE_ITEM_QTY_REVENUE,
QUOTE_SENT_TO_CUST_DATE,Quote_Start_Date,Quote_End_Date,
QuotationValidityDays,SELLING_PLANT,
SOLD_TO_ACCOUNT,UOM,WRITE_IN_PRODUCT_DESC,
IH_SOLDTOCUST,ID_CUSTPART,
ID_PART,ID_QTYINVOICED,ID_PRICE,IH_ORDERDATE,IH_INVOICEDATE,
ID_SITE,ID_UNITOFMEASURE,ID_ERPID,--ID_LINE,
ID_STDCOST,ID_STD_MARKUPCOST,ID_PRICE_LIST,
ID_DISC_PRICE_LIST,ID_NET_PRICE_LIST,ID_UOM,
TPH_ORIG_SYTEM,IH_CURRENCY,IH_BASE_CURR_RATE,
IH_USD_RATE,IH_BASE_CURRENCY, IH_BASE_TO_USD_RATE,
case when IH_SOLDTOCUST is null then 'LOSS' else 'WIN' end as Quote_Line_Result
INTO MOSAIC_DATAMART.COM_C360_WL_QUOTE_TAG_STAGE
FROM [MOSAIC_DATAMART].[COM_C360_WL_QUOTE_STAGE] q
LEFT JOIN [MOSAIC_DATAMART].COM_C360_QUOTE_END_DATES dq on q.QUOTE = dq.QUOTE and q.LINE = dq.LINE 
			and q.QUOTE_REVISION = dq.QUOTE_REVISION and q.CS_PARENT = dq.CS_PARENT 
			and q.[QUOTE_PART_NUM] = dq.[QUOTE_PART_NUM]
LEFT JOIN (SELECT IH_SOLDTOCUST, ID_CUSTPART, ID_PART, ID_QTYINVOICED, ih.IH_ORDERDATE, ih.IH_INVOICEDATE,
			ID_SITE, ID_UNITOFMEASURE, ID_ERPID, ID_PRICE, ID_STDCOST, ID_STD_MARKUPCOST, 
			ID_PRICE_LIST, ID_DISC_PRICE_LIST,ID_NET_PRICE_LIST, ID_UOM,
			t.TPH_ORIG_SYTEM, ac.AC_INVOICE_TYPE, cs.CS_ERPID, cs.CS_CUSTOMERID,
			cs.CS_GENERIC_NAME,cs.CS_PARENT,cs.CS_CHANNEL_TYPE,cs.CS_CHANNEL,
			IH_CURRENCY, IH_BASE_CURR_RATE, IH_USD_RATE, IH_BASE_CURRENCY,IH_BASE_TO_USD_RATE
			FROM MOSAIC_ODS.INVOICE_HEADER ih
			INNER JOIN MOSAIC_ODS.INVOICE_DETAILS id ON (ih.IH_INVOICENUMBER = id.ID_INVOICENUMBER 
			and ih.IH_SONUMBER = id.ID_SONUMBER and ih.IH_ERPID = ID_ERPID and ih.IH_OPERATIONID = id.ID_OPERATIONID)
			LEFT JOIN [MOSAIC_DATAMART].[TPH_ERP_MAP] t on ih.IH_ERPID = t.ERPID
			LEFT JOIN [MOSAIC_ODS].[ACCOUNT_CLASSIFICATIONS] ac on (ac.AC_Account = id.ID_ACCOUNT 
			AND ac.AC_ERPID = ih.IH_ERPID AND ac.AC_OPERATIONID = ih.IH_OPERATIONID)
			LEFT JOIN MOSAIC_ODS.CUSTOMER_SUPPLEMENTS cs ON cs.CS_CUSTOMERID = ih.IH_SOLDTOCUST and cs.CS_ERPID = ih.IH_ERPID
			WHERE ac.AC_INVOICE_TYPE = 'GROSS TRADE') inv ON upper(q.QUOTE_PART_NUM) = upper(inv.ID_PART) 
			and upper(q.CS_PARENT) = upper(inv.CS_PARENT)
			and upper(q.ERP_SYSTEM_NAME) = upper(inv.TPH_ORIG_SYTEM)
			and inv.IH_ORDERDATE between dq.Quote_Start_Date and isnull(dq.Quote_End_Date, getdate())

/*Creating Summarized Data*/
CREATE VIEW MOSAIC_DATAMART.COM_C360_WL_QUOTE_SUMMARY as
	SELECT [QUOTE]
      ,[LINE]
      ,[QUOTE_REVISION]
      ,[ACCOUNT]
      ,[CS_PARENT]
      ,[CS_CHANNEL]
      ,[QUOTE_PART_NUM]
      ,[WRITE_IN_PRODUCT]
      ,[CUSTOMER_PART]
	  ,max(GPM_BMH_CODE) as GPM_BMH_CODE
	  ,[ERP_ACCOUNT_ID]
      ,[ERP_SYSTEM_NAME]
	  ,avg([EAU]) as EAU
	  ,avg([EXTENDED_EAU_NET_PRICE]) as EXTENDED_EAU_NET_PRICE
      ,avg([EXTENDED_QTY]) as EXTENDED_QTY
      ,avg([NET_PRICE]) as NET_PRICE
      ,avg([QUANTITY]) as QUANTITY
      ,avg([QUOTE_ITEM_QTY_REVENUE]) as QUOTE_ITEM_QTY_REVENUE
	  ,MAX([QUOTE_SENT_TO_CUST_DATE]) as QUOTE_SENT_TO_CUST_DATE
      ,max([Quote_Start_Date]) as Quote_Start_Date
      ,max([Quote_End_Date]) as  Quote_End_Date
      ,max([QuotationValidityDays]) as  QuotationValidityDays
      ,max([SELLING_PLANT]) as  SELLING_PLANT
      ,max([SOLD_TO_ACCOUNT]) as  SOLD_TO_ACCOUNT
      ,max([UOM]) as   UOM
      ,max([WRITE_IN_PRODUCT_DESC]) as   WRITE_IN_PRODUCT_DESC
      ,max([IH_SOLDTOCUST]) as   IH_SOLDTOCUST
      ,max([ID_CUSTPART]) as  ID_CUSTPART
      ,max([ID_PART]) as ID_PART
	  ,avg([ID_QTYINVOICED]) as ID_QTYINVOICED
      ,avg([ID_PRICE]) as ID_PRICE
	  ,avg(ID_QTYINVOICED*ID_PRICE) as Revenue_Local
	  ,avg((ID_QTYINVOICED*ID_PRICE)/IH_BASE_TO_USD_RATE/IH_BASE_CURR_RATE) as Revenue_USD
	  ,min([IH_ORDERDATE]) as IH_ORDERDATE_MIN
      ,max([IH_ORDERDATE]) as IH_ORDERDATE_MAX
	  ,min([IH_INVOICEDATE]) as IH_INVOICEDATE_MIN
      ,max([IH_INVOICEDATE]) as IH_INVOICEDATE_MAX
	  ,max([ID_SITE]) as ID_SITE
      ,max([ID_UNITOFMEASURE]) as ID_UNITOFMEASURE
      ,max([ID_ERPID]) as ID_ERPID
	  ,avg([ID_STDCOST]) as ID_STDCOST
      ,avg([ID_STD_MARKUPCOST]) as ID_STD_MARKUPCOST
	  ,sum((ID_STDCOST*ID_QTYINVOICED)/IH_BASE_TO_USD_RATE) as ID_STDCOST_USD_EXTENDED
      ,sum((ID_STD_MARKUPCOST*ID_QTYINVOICED)/IH_BASE_TO_USD_RATE) as ID_STD_MARKUPCOST_USD_EXTENDED
	  ,max([Quote_Line_Result])Quote_Line_Result
FROM MOSAIC_DATAMART.COM_C360_WL_QUOTE_TAG_STAGE q
LEFT JOIN MOSAIC_ODS. GLOBAL_PRODUCT_MASTER gpm ON q.[QUOTE_PART_NUM] = gpm.GPM_PART
GROUP BY [QUOTE],[LINE],[QUOTE_REVISION]
		,[ACCOUNT],[CS_PARENT],[CS_CHANNEL]
		,[QUOTE_PART_NUM],[WRITE_IN_PRODUCT],[CUSTOMER_PART]
		,[ERP_ACCOUNT_ID],[ERP_SYSTEM_NAME]
